@inject ILoxicaApi loxicaAPI
@inject AuthenticationStateProvider authStateProvider

<!--Envolvemos todo o contido orixinal de App.razor nun componente CascadingAuthenticatioState
que pasa unha property en cascada como authentication state property
asi que os componentes Blazor poden ler esa propiedade e poden entender
se un usuario esta ou non autenticado
-->
<!--We wrap all the original content of App.razon within a CascadingAuthenticatioState
component which passes a cascading property like authentication state
so Blazor componentes can read that property and can understand
whether a user is authenticated or not-->
<CascadingAuthenticationState>
    <!--Con OnNavigationAsync o metodo executarase en CADA reload da web-->
    <Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@OnNavigateAsync">
        <Found Context="routeData">
            <!--Cambiamos RouteView por defecto agregando AuthorizeRouteView (feito esto hai que quitar RouteView para evitar unha excepcion)-->
            <!--We modify RouteView by default adding AuthorizeRouteView (you must remove RouteView component afterwards to prevent any exception)-->
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
<!--Fin CascadingAuthenticationState-->
@code
{
    private async Task OnNavigateAsync(NavigationContext context)
    {
        //obtemos informacion de usuario convertindo authStateProvider
        //ao noso PersonalAuthStateProvider
        //we get user information converting authStateProvider
        //to our PersonalAuthStateProvider
        var usuario = (await (authStateProvider as PersonalAuthStateProvider).GetAuthenticationStateAsync()).User;
        var resposta = await loxicaAPI.UsuarioPerfilAsync();

        if (resposta.Mensaxe == "Success")
        {
            //como non podemos inxectar PersonalAuthStateProvider tal cal
            //usamos authStateProvider, que si e unha instancia de AuthenticationStateProvider
            // que si podemos inxectar
            //convertirmos authStateProvider en PersonalAuthStateProvider
            (authStateProvider as PersonalAuthStateProvider)
            .SetAuthenticationInfo(resposta.UsuarioPerfil);
        }
        else
        {

        }
    }
}
